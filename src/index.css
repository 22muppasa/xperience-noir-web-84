@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Dark mode variables (default) */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;

    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 0 0% 15%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 20%;
    --input: 0 0% 20%;
    --ring: 0 0% 100%;

    --radius: 1rem;
  }

  .light-mode {
    /* Light mode variables */
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;

    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;

    --secondary: 0 0% 98%;
    --secondary-foreground: 0 0% 0%;

    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;

    --accent: 0 0% 96%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89%;
    --input: 0 0% 89%;
    --ring: 0 0% 0%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans transition-colors duration-300;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-medium tracking-tight font-poppins;
  }

  h1 {
    @apply text-4xl md:text-5xl lg:text-6xl;
  }

  h2 {
    @apply text-3xl md:text-4xl;
  }

  h3 {
    @apply text-2xl md:text-3xl;
  }

  .container {
    @apply px-4 md:px-6;
  }

  /* Add smooth scrolling */
  html {
    @apply scroll-smooth;
  }
}

@layer components {
  .btn {
    @apply rounded-full px-6 py-3 font-medium transition-all duration-200;
  }

  .card {
    @apply rounded-3xl border border-gray-100 bg-white p-6 shadow-sm transition-all;
  }

  .glass {
    @apply bg-white/70 backdrop-blur-md border border-white/20;
  }

  /* Animated Background Styles */
  .animated-background {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -10;
    overflow: hidden;
  }

  /* ————— Grid overlay now on the full‐screen element ————— */
  .animated-background::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: 1;

    background-image: radial-gradient(
      circle at 50% 50%,
      #0000 0,
      #0000 2px,
      hsl(0 0 4%) 2px
    );
    background-size: 8px 8px;

    /* Only the overlay itself is blurred & hue-rotated */
    --f: blur(3em) brightness(9);
    animation: 5s ease-in-out hiii infinite;
  }

  /* ————— Remove the old container‐scoped overlay ————— */
  /*
  .animated-background .container::after {
    … (this block is now deprecated)
  }
  */

  /* ————— Flicker keyframes now use filter so they don't blur the backdrop ————— */
  @keyframes hiii {
    0%   { filter: var(--f) hue-rotate(0deg); }
    25%  { filter: var(--f) hue-rotate(-25deg); }
    28%  { filter: var(--f) hue-rotate(0deg); }
    32%  { filter: var(--f) hue-rotate(-20deg); }
    39%  { filter: var(--f) hue-rotate(0deg); }
    40%  { filter: var(--f) hue-rotate(-20deg); }
    41%  { filter: var(--f) hue-rotate(0deg); }
    42%  { filter: var(--f) hue-rotate(-25deg); }
    44%  { filter: var(--f) hue-rotate(0deg); }
    58%  { filter: var(--f) hue-rotate(-20deg); }
    64%  { filter: var(--f) hue-rotate(0deg); }
    80%  { filter: var(--f) hue-rotate(-25deg); }
    to   { filter: var(--f) hue-rotate(0deg); }
  }

  /* ————— The moving star‐field stays in the container only ————— */
  .animated-background .container {
    position: absolute;
    inset: 0;
    background: #000;
  }
  .animated-background .container::before {
    content: "";
    position: absolute;
    inset: -145%;
    rotate: -45deg;
    --c: #ffffff;
    --c1: #888888;
    background-image:
      radial-gradient(4px 100px at 0px 235px, var(--c), #0000),
      /* … all the other radial-gradient lines unchanged … */
      radial-gradient(3px 4px at 150px 105px, var(--c1) 100%, #0000 150%);
    background-size:
      300px 235px,
      /* … identical sizes … */
      300px 210px;
    animation: hi 150s linear infinite;
  }

  @keyframes hi {
    0% {
      background-position:
        0px 220px,
        /* … identical positions … */
        426.5px 180px;
    }
    to {
      background-position:
        0px 6800px,
        /* … identical end positions … */
        426.5px 6480px;
    }
  }

  /* Animated Button Styles */
  .animated-button-wrapper {
    position: relative;
    display: inline-block;
  }
  .animated-button {
    --black-700: hsla(0 0% 12% / 1);
    --border_radius: 9999px;
    --transtion: 0.3s ease-in-out;
    --offset: 2px;

    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transform-origin: center;
    padding: 1rem 2rem;
    background-color: transparent;
    border: none;
    border-radius: var(--border_radius);
    transform: scale(calc(1 + (var(--active, 0) * 0.1)));
    transition: transform var(--transtion);
  }
  .animated-button::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background-color: var(--black-700);
    border-radius: var(--border_radius);
    box-shadow:
      inset 0 0.5px hsl(0, 0%, 100%),
      inset 0 -1px 2px 0 hsl(0, 0%, 0%),
      0px 4px 10px -4px hsla(0 0% 0% / calc(1 - var(--active, 0))),
      0 0 0 calc(var(--active, 0) * 0.375rem) hsl(260 97% 50% / 0.75);
    transition: all var(--transtion);
    z-index: 0;
  }
  .animated-button::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background-color: hsla(260 97% 61% / 0.75);
    background-image:
      radial-gradient(at 51% 89%, hsla(266,45%,74%,1) 0, transparent 50%),
      radial-gradient(at 100%100%, hsla(266,36%,60%,1) 0, transparent 50%),
      radial-gradient(at 22%91%, hsla(266,36%,60%,1) 0, transparent 50%);
    background-position: top;
    opacity: var(--active, 0);
    border-radius: var(--border_radius);
    transition: opacity var(--transtion);
    z-index: 2;
  }

  /* …the rest of your animated-button variants and utilities remain unchanged… */
}

@layer utilities {
  .hover-scale {
    @apply transition-all duration-300 hover:scale-[1.03] hover:shadow-md;
  }
  .animate-delay-100 {
    animation-delay: 100ms;
  }
  .animate-delay-200 {
    animation-delay: 200ms;
  }
  .animate-delay-300 {
    animation-delay: 300ms;
  }
  .animation-delay-200 {
    animation-delay: 0.2s;
  }
  .animation-delay-400 {
    animation-delay: 0.4s;
  }
  .animation-delay-600 {
    animation-delay: 0.6s;
  }
  .animation-delay-800 {
    animation-delay: 0.8s;
  }
  .button-hover {
    @apply relative
      after:absolute after:bottom-0 after:left-0
      after:h-[2px] after:w-0 after:bg-current
      after:transition-all after:duration-300
      hover:after:w-full;
  }
  .text-balance {
    text-wrap: balance;
  }
}

/* Loader animations */
@keyframes ripple {
  0% {
    transform: scale(1);
    box-shadow: rgba(0, 0, 0, 0.3) 0px 10px 10px -0px;
  }
  50% {
    transform: scale(1.3);
    box-shadow: rgba(0, 0, 0, 0.3) 0px 30px 20px -0px;
  }
  100% {
    transform: scale(1);
    box-shadow: rgba(0, 0, 0, 0.3) 0px 10px 10px -0px;
  }
}

@keyframes color-change {
  0% {
    fill: gray;
  }
  50% {
    fill: white;
  }
  100% {
    fill: gray;
  }
}

.animate-ripple {
  animation: ripple 2s infinite ease-in-out;
}

.animate-color-change {
  animation: color-change 2s infinite ease-in-out;
}
